{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/Extc/RF/Filter Design  By The Image Parameter Method","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Filter Design  By The Image Parameter Method\",\n  \"description\": \"Filter Design  By The Image Parameter Method Introduction\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The image parameter method of filter design involves the specification of passband and stopband characteristics for a cascade of two-port networks, and so is similar in concept to the periodic structures that were studied in Section 8.1. The method is relatively simple but has the disadvantage that an arbitrary frequency response cannot be incorporated into the design. This is in contrast to the insertion loss method, which is the subject of the following section. Nevertheless, the image parameter method is useful for simple filters and provides a link between infinite periodic structures and practical filter design. The image parameter method also finds application in solid-state traveling-wave amplifier design.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"Filter Design  By The Image Parameter Method","description":"Filter Design  By The Image Parameter Method Introduction"}}},"pageContext":{"id":"70eea7ef-9ce6-5448-9bed-f89a3c3238c5"}}}